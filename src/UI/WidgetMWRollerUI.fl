# data file for the Fltk User Interface Designer (fluid)
version 1.0303 
header_name {.h} 
code_name {.cc}
comment {WidgetMWRoller.h} {not_in_source in_header
} 

comment {WidgetMWRoller.cc} {in_source not_in_header
} 

comment {Original ZynAddSubFX author Nasca Octavian Paul
Copyright (C) 2002-2005 Nasca Octavian Paul
Copyright 2009-2010, Alan Calvert

This file is part of yoshimi, which is free software: you can redistribute
it and/or modify it under the terms of the GNU Library General Public
License as published by the Free Software Foundation; either version 2 of
the License, or (at your option) any later version.

yoshimi is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.   See the GNU General Public License (version 2 or
later) for more details.

You should have received a copy of the GNU General Public License along with
yoshimi; if not, write to the Free Software Foundation, Inc., 51 Franklin
Street, Fifth Floor, Boston, MA  02110-1301, USA.

This file is a derivative of the ZynAddSubFX original, modified October 2010
} {in_source in_header
} 

decl {\#include <FL/Fl.H>
    \#include <FL/Fl_Roller.H>} {public global
} 

class mwheel_roller {open : {public Fl_Roller}
} {
  decl {int reverse;} {public local
  }
  Function {mwheel_roller(int x, int y, int w, int h, const char *l=0) : Fl_Roller (x,y,w,h,l)} {} {
    code {reverse = -1;} {}
  }
  Function {handle(int ev)} {open return_type int
  } {
    code {double v1;
    int res = Fl_Roller::handle(ev); // do the base-class actions

    if (ev == FL_MOUSEWHEEL) // now check for wheel-mouse events
    {
        // use both dx & dy to admit horiz. scrolling, up & right should be +
        int d = reverse * Fl::event_dx() - reverse * Fl::event_dy(); // correct for weirdness
        v1 = value(); // current value
        v1 = increment(v1, d); // change
        v1 = clamp(v1); // clamp to valuator limits
        value(v1); // update widget
        this->do_callback(); //maybe update
        return 1; // say we ate this event
    }
    return res;} {selected
    }
  }
} 
